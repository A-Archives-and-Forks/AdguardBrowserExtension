[
	{
		"id": 1,
		"action": {
			"type": "block"
		},
		"condition": {
			"urlFilter": "dummy.rule.adguard.com",
			"resourceTypes": [
				"xmlhttprequest"
			]
		},
		"metadata": {
			"metadata": {
				"regexpRulesCount": 0,
				"rulesCount": 3,
				"ruleSetHashMapRaw": "[[1341149889,[[5,8576]]],[3254046706,[[5,8609]]],[2257768385,[[5,9116]]]]",
				"badFilterRulesRaw": []
			},
			"lazyMetadata": {
				"sourceMapRaw": "[[8577,8576,5],[8610,8609,5],[9117,9116,5]]",
				"filterIds": [
					5
				]
			},
			"conversionMap": {},
			"rawFilterList": "! Checksum: vaqnuw0pwOjhI9VK+7JatQ\r\n! Title: AdGuard Experimental filter\r\n! Description: Filter designed to test certain hazardous filtering rules before they are added to the basic filters.\r\n! Version: 2.0.1.61\r\n! TimeUpdated: 2024-10-21T05:32:55+00:00\r\n! Expires: 10 days (update frequency)\r\n! Homepage: https://github.com/AdguardTeam/AdGuardFilters\r\n! License: https://github.com/AdguardTeam/AdguardFilters/blob/master/LICENSE\r\n!\r\n!-------------------------------------------------------------------!\r\n!------------------ General JS API ---------------------------------!\r\n!-------------------------------------------------------------------!\r\n! JS API START\r\n#%#var AG_onLoad=function(func){if(document.readyState===\"complete\"||document.readyState===\"interactive\")func();else if(document.addEventListener)document.addEventListener(\"DOMContentLoaded\",func);else if(document.attachEvent)document.attachEvent(\"DOMContentLoaded\",func)};\r\n#%#var AG_removeElementById = function(id) { var element = document.getElementById(id); if (element && element.parentNode) { element.parentNode.removeChild(element); }};\r\n#%#var AG_removeElementBySelector = function(selector) { if (!document.querySelectorAll) { return; } var nodes = document.querySelectorAll(selector); if (nodes) { for (var i = 0; i < nodes.length; i++) { if (nodes[i] && nodes[i].parentNode) { nodes[i].parentNode.removeChild(nodes[i]); } } } };\r\n#%#var AG_each = function(selector, fn) { if (!document.querySelectorAll) return; var elements = document.querySelectorAll(selector); for (var i = 0; i < elements.length; i++) { fn(elements[i]); }; };\r\n#%#var AG_removeParent = function(el, fn) { while (el && el.parentNode) { if (fn(el)) { el.parentNode.removeChild(el); return; } el = el.parentNode; } };\r\n!\r\n! AG_removeCookie\r\n! Examples: AG_removeCookie('/REGEX/') or AG_removeCookie('part of the cookie name')\r\n!\r\n#%#var AG_removeCookie=function(a){var e=/./;/^\\/.+\\/$/.test(a)?e=new RegExp(a.slice(1,-1)):\"\"!==a&&(e=new RegExp(a.replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\")));a=function(){for(var a=document.cookie.split(\";\"),g=a.length;g--;){cookieStr=a[g];var d=cookieStr.indexOf(\"=\");if(-1!==d&&(d=cookieStr.slice(0,d).trim(),e.test(d)))for(var h=document.location.hostname.split(\".\"),f=0;f<h.length-1;f++){var b=h.slice(f).join(\".\");if(b){var c=d+\"=\",k=\"; domain=\"+b;b=\"; domain=.\"+b;document.cookie=c+\"; expires=Thu, 01 Jan 1970 00:00:00 GMT\";document.cookie=c+k+\"; expires=Thu, 01 Jan 1970 00:00:00 GMT\";document.cookie=c+b+\"; expires=Thu, 01 Jan 1970 00:00:00 GMT\";document.cookie=c+\"; path=/; expires=Thu, 01 Jan 1970 00:00:00 GMT\";document.cookie=c+k+\"; path=/; expires=Thu, 01 Jan 1970 00:00:00 GMT\";document.cookie=c+b+\"; path=/; expires=Thu, 01 Jan 1970 00:00:00 GMT\"}}}};a();window.addEventListener(\"beforeunload\",a)};\r\n!\r\n! AG_defineProperty\r\n! See https://github.com/AdguardTeam/deep-override\r\n!\r\n#%#var AG_defineProperty=function(){var p,q=Object.defineProperty;if(\"function\"==typeof WeakMap)p=WeakMap;else{var r=0,t=function(){this.a=(r+=Math.random()).toString()};t.prototype.set=function(a,b){var d=a[this.a];d&&d[0]===a?d[1]=b:q(a,this.a,{value:[a,b],writable:!0});return this};t.prototype.get=function(a){var b;return(b=a[this.a])&&b[0]===a?b[1]:void 0};t.prototype.has=function(a){var b=a[this.a];return b?b[0]===a:!1};p=t}function u(a){this.b=a;this.h=Object.create(null)}function v(a,b,d,e){this.a=a;this.i=b;this.c=d;this.f=e}function w(){this.g=/^([^\\\\\\.]|\\\\.)*?\\./;this.j=/\\\\(.)/g;this.a=new p}function x(a,b){var d=b.f;if(d&&!(\"beforeGet\"in d||\"beforeSet\"in d))return z(d);var e={get:function(){var c=b.f;c&&c.beforeGet&&c.beforeGet.call(this,b.a.b);a:if(c=b.g)c=A(c)?c.value:c.get?c.get.call(this):void 0;else{c=b.a.b;if(b.i in c&&(c=B(c),null!==c)){var d=C.call(c,b.i);c=d?d.call(this):c[b.i];break a}c=void 0}(this===b.a.b||D.call(b.a.b,this))&&E(a,c,b.c);return c},set:function(c){if(this===b.a.b||D.call(b.a.b,this)){b.f&&b.f.beforeSet&&(c=b.f.beforeSet.call(this,c,this));var d=b.g;d&&A(d)&&d.value===c?c=!0:(d=F(b,c,this),G(c)&&(c=H(a,c),I(a,c,b.c)),c=d)}else c=F(b,c,this);return c}};d&&J(d,e,K);return e}function I(a,b,d){for(var e in d.h){var c=d.h[e];if(b.h[e]){var h=a,g=b.h[e],k=c;!k.f||g.f||\"undefined\"===typeof g.a.b||g.g||(g.g=z(k.f));g.c&&k.c&&g.c!==k.c&&I(h,g.c,k.c)}else{g=h=void 0;k=a;var f=b,l=c.i,m=\"undefined\"!==typeof f.b,y=!1;m&&(g=L(f.b,l))&&!g.configurable&&(y=!0,h=f.b[l]);var n=y?H(k,h):new u(c.c.b);I(k,n,c.c);n=new v(f,l,n,c.f);f.h[l]=n;m&&(n.g=g,m=x(k,n),y?E(k,h,c.c):(q(f.b,l,m),g&&A(g)&&(M(m,g.value,f.b),E(k,g.value,c.c))))}}}function E(a,b,d){G(b)&&(b=H(a,b),I(a,b,d))}function F(a,b,d){var e=a.g;if(!e){e=B(a.a.b);if(null!==e&&(e=N.call(e,a.i)))return e.call(d,b);if(!O(a.a.b))return!1;a.g={value:b,configurable:!0,writable:!0,enumerable:!0};return!0}return M(e,b,d)}function H(a,b){var d=a.a.get(b);d||(d=new u(b),a.a.set(b,d));return d}function A(a){return\"undefined\"!==typeof a.writable}function J(a,b,d){for(var e=0,c=d.length;e<c;e++){var h=d[e];h in a&&(b[h]=a[h])}}function z(a){if(a){var b={};J(a,b,P);return b}}function M(a,b,d){if(A(a))return a.writable?(a.value=b,!0):!1;if(!a.set)return!1;a.set.call(d,b);return!0}var P=\"configurable enumerable value get set writable\".split(\" \"),K=P.slice(0,2),L=Object.getOwnPropertyDescriptor,O=Object.isExtensible,B=Object.getPrototypeOf,D=Object.prototype.isPrototypeOf,C=Object.prototype.__lookupGetter__||function(a){return(a=Q(this,a))&&a.get?a.get:void 0},N=Object.prototype.__lookupSetter__||function(a){return(a=Q(this,a))&&a.set?a.set:void 0};function Q(a,b){if(b in a){for(;!w.hasOwnProperty.call(a,b);)a=B(a);return L(a,b)}}function G(a){var b=typeof a;return\"function\"===b||\"object\"===b&&null!==a?!0:!1}var R;return function(a,b,d){R||(R=new w);var e=R;d=d||window;var c=new u;a+=\".\";var h=c||new u;for(var g=e.g,k=e.j,f,l,m;a;){f=g.exec(a);if(null===f)throw 1;f=f[0].length;l=a.slice(0,f-1).replace(k,\"$1\");a=a.slice(f);(f=h.h[l])?m=f.c:(m=new u,f=new v(h,l,m),h.h[l]=f);h=m}if(!f)throw 1;a=f;a.f=b;E(e,d,c)};}();\r\n!\r\n! AG_abortOnPropertyWrite(property, debug)\r\n! Aborts execution of a script when it attempts to write the specified property.\r\n! Based on AG_defineProperty (https://github.com/AdguardTeam/deep-override)\r\n!\r\n! Examples:\r\n! AG_abortOnPropertyWrite('String.fromCharCode');\r\n!\r\n! @param property property or properties chain\r\n! @param debug optional, if true - we will print warning when script is aborted.\r\n!\r\n#%#var AG_abortOnPropertyWrite=function(a,b){var c=Math.random().toString(36).substr(2,8);AG_defineProperty(a,{beforeSet:function(){b&&console.warn(\"AdGuard aborted property write: \"+a);throw new ReferenceError(c);}});var d=window.onerror;window.onerror=function(e){if(\"string\"===typeof e&&-1!==e.indexOf(c))return b&&console.warn(\"AdGuard has caught window.onerror: \"+a),!0;if(d instanceof Function)return d.apply(this,arguments)}};\r\n!\r\n! AG_abortOnPropertyRead(property, debug)\r\n! Aborts execution of a script when it attempts to read the specified property.\r\n! Based on AG_defineProperty (https://github.com/AdguardTeam/deep-override)\r\n!\r\n! Examples:\r\n! AG_abortOnPropertyRead('String.fromCharCode');\r\n!\r\n! @param property property or properties chain\r\n! @param debug optional, if true - we will print warning when script is aborted.\r\n!\r\n#%#var AG_abortOnPropertyRead=function(a,b){var c=Math.random().toString(36).substr(2,8);AG_defineProperty(a,{beforeGet:function(){b&&console.warn(\"AdGuard aborted property read: \"+a);throw new ReferenceError(c);}});var d=window.onerror;window.onerror=function(e){if(\"string\"===typeof e&&-1!==e.indexOf(c))return b&&console.warn(\"AdGuard has caught window.onerror: \"+a),!0;if(d instanceof Function)return d.apply(this,arguments)}};\r\n!\r\n! AG_abortInlineScript(regex, property, debug)\r\n! Aborts execution of an inline script when it attempts to access the specified property\r\n! AND content of the <script> element matches specified regular expression.\r\n! Based on AG_defineProperty (https://github.com/AdguardTeam/deep-override)\r\n!\r\n! Examples:\r\n! AG_abortInlineScript(/zfgloadedpopup|zfgloadedpushopt/, 'String.fromCharCode');\r\n!\r\n! @param regex regular expression that the inline script contents must match\r\n! @param property property or properties chain\r\n! @param debug optional, if true - we will print warning when script is aborted.\r\n!\r\n#%#var AG_abortInlineScript=function(g,b,c){var d=function(){if(\"currentScript\"in document)return document.currentScript;var a=document.getElementsByTagName(\"script\");return a[a.length-1]},e=Math.random().toString(36).substr(2,8),h=d();AG_defineProperty(b,{beforeGet:function(){var a=d();if(a instanceof HTMLScriptElement&&a!==h&&\"\"===a.src&&g.test(a.textContent))throw c&&console.warn(\"AdGuard aborted execution of an inline script\"),new ReferenceError(e);}});var f=window.onerror;window.onerror=function(a){if(\"string\"===typeof a&&-1!==a.indexOf(e))return c&&console.warn(\"AdGuard has caught window.onerror: \"+b),!0;if(f instanceof Function)return f.apply(this,arguments)}};\r\n!\r\n! AG_setConstant('property.chain', 'true') // defines boolean (true), same for false;\r\n! AG_setConstant('property.chain', '123') // defines Number 123;\r\n! AG_setConstant('property.chain', 'noopFunc') // defines function(){};\r\n! AG_setConstant('property.chain', 'trueFunc') // defines function(){return true};\r\n! AG_setConstant('property.chain', 'falseFunc') // defines function(){return false};\r\n!\r\n#%#var AG_setConstant=function(e,a){if(\"undefined\"===a)a=void 0;else if(\"false\"===a)a=!1;else if(\"true\"===a)a=!0;else if(\"noopFunc\"===a)a=function(){};else if(\"trueFunc\"===a)a=function(){return!0};else if(\"falseFunc\"===a)a=function(){return!1};else if(/^\\d+$/.test(a)){if(a=parseFloat(a),isNaN(a)||32767<Math.abs(a))return}else return;var b=!1;AG_defineProperty(e,{get:function(){return a},set:function(c){if(b)var d=!0;else void 0!==c&&void 0!==a&&typeof c!==typeof a&&(b=!0),d=b;d&&(a=c)}})};\r\n! JS API FINISH\r\n!-------------------------------------------------------------------!\r\n!------- Experimental rules for English filter ---------------------!\r\n!-------------------------------------------------------------------!\r\n!\r\n! Advertising networks known rotator domains\r\n!\r\n! This section contains the list of rules blocking requests\r\n! to known rotator domains of the advertising networks.\r\n! For example, \"*.doubleclick.net\" are rotator domains\r\n! of Doubleclick ad network.\r\n!\r\n! Do not mix it up with direct adverts domains.\r\n! Read about it in direct_adverts.txt\r\n!\r\n!\r\n! Direct adverts\r\n!\r\n! Contains rules which are blocking URLs to direct adverts.\r\n! What do we mean by direct adverts - it is all kind of advertisers\r\n! who are not ad networks.\r\n!\r\n! For example, rules that block referral links.\r\n!\r\n!\r\n! URL blocking rules unsorted list\r\n! http://adguard.com/filterrules.html#baseRules\r\n!\r\n! Add basic rule here if it cannot be added to\r\n! direct_adverts.txt or advertising_networks.txt.\r\n! For example rules like \"http://example.com/banner.png\"\r\n! blocking specific URL should be added to this section.\r\n!\r\n!\r\n! Common CSS rules\r\n!\r\n! This section contains CSS rules without domain restrictions.\r\n! Be cautious and add rules here even if you are sure that this\r\n! rule could be used for more than one web site.\r\n!\r\n!\r\n! Common HTML rules\r\n! http://adguard.com/filterrules.html#htmlContentFilter\r\n!\r\n! This section contains the list of common HTML rules\r\n! without domain restrictions.\r\n! Be aware that rules added to this section cannot be used\r\n! by Adguard extensions.\r\n! We advise you to stick to CSS/Javascript/URL rule types\r\n! and use HTML rules if there is no other way only.\r\n!\r\n!\r\n! Common javascript rules\r\n! http://adguard.com/filterrules.html#javascriptInjection\r\n!\r\n! Javascript rules which are not restricted to specific domains.\r\n! Be VERY cautious with this type of rules.\r\n!\r\n!\r\n! YouTube ads (for old and new ads)\r\n! youtube.com - white screen with skip button\r\n! I am not sure why we need this, commented out\r\n! !#if (!adguard_app_ios && !adguard_ext_android_cb)\r\n! @@||youtube.com/get_video_info\r\n! !#endif\r\n!\r\n! Rules that are restricted to one or more domains.\r\n! This section contain any type of rule grouped by domain.\r\n!\r\n! remove anti-adb\r\n! !#if (!adguard_ext_firefox)\r\n! www.youtube.com#%#(()=>{const wrapper=(target,thisArg,args)=>{let result=Reflect.apply(target,thisArg,args);try{const decoded=atob(result);if(decoded.includes('bkaEnforcementMessage')){const modifiedContent=decoded.replace(/\\n.\\n.auxiliaryUi\\.messageRenderers\\.bkaEnforcementMessageViewModel\\.displayType.\\dENFORCEMENT_MESSAGE_VIEW_MODEL_DISPLAY_TYPE_[A-Z]+\\n.\\n.auxiliaryUi\\.messageRenderers\\.bkaEnforcementMessageViewModel\\.isVisible.{2}(?:tru|fals)e/,'');const encodeToBase64=btoa(modifiedContent);return encodeToBase64}}catch(e){} return result};const handler={apply:wrapper};window.Array.prototype.join=new Proxy(window.Array.prototype.join,handler)})();\r\n! www.youtube.com#%#//scriptlet('trusted-replace-fetch-response', '/\"auxiliaryUi\":\\{\"messageRenderers\":\\{\"bkaEnforcementMessageViewModel.*?e\\}\\}\\}\\,/', '', 'player?')\r\n! www.youtube.com#%#//scriptlet('trusted-replace-xhr-response', '/\"auxiliaryUi\":\\{\"messageRenderers\":\\{\"bkaEnforcementMessageViewModel.*?e\\}\\}\\}\\,/', '', '/playlist\\?list=|player\\?|watch\\?[tv]=/')\r\n! www.youtube.com#%#//scriptlet('set-constant', 'ytInitialPlayerResponse.auxiliaryUi.messageRenderers.bkaEnforcementMessageViewModel', 'undefined')\r\n! !#endif\r\n! main youtube page - changing view for the first row of elements\r\nwww.youtube.com#$##contents ytd-rich-grid-row:has(> div[id=\"contents\"] > ytd-rich-item-renderer[style=\"display: none !important;\"]) > #contents:first-child { max-width: unset !important; }\r\nwww.youtube.com#$##contents ytd-rich-grid-row:has(> div[id=\"contents\"] > ytd-rich-item-renderer[style=\"display: none !important;\"]) ytd-rich-grid-media { max-width: unset !important; }\r\nwww.youtube.com#$##contents ytd-rich-grid-row:has(> div[id=\"contents\"] > ytd-rich-item-renderer[style=\"display: none !important;\"]) { --ytd-rich-grid-items-per-row: 1 !important; }\r\n! https://github.com/AdguardTeam/AdguardFilters/issues/96262\r\ndeveloper.android.com,adssettings.google.com##sc-survey-survey-manager\r\n!\r\n! https://github.com/AdguardTeam/AdguardFilters/issues/174701#issuecomment-1991730425\r\nfoxtel.com.au#%#//scriptlet('xml-prune', 'xpath(//*[name()=\"MPD\"]/@mediaPresentationDuration | //*[name()=\"Period\"]/@start | //*[name()=\"Period\"][.//*[name()=\"BaseURL\" and contains(text(),\"/adease/\")]])', '', '.mpd')\r\nfoxtel.com.au#%#//scriptlet('json-prune', 'adease adeaseBlob vmap')\r\n!\r\n! Allowlist\r\n! http://adguard.com/filterrules.html#exclusionRules\r\n! http://adguard.com/filterrules.html#hideRulesExceptions\r\n! http://adguard.com/filterrules.html#cssInjectionExceptions\r\n! http://adguard.com/filterrules.html#javascriptInjectionExceptions\r\n!\r\n! This section contains all kinds of exception rules.\r\n!\r\n!-------------------------------------------------------------------!\r\n!------- Experimental rules for Spyware filter ---------------------!\r\n!-------------------------------------------------------------------!\r\n!\r\n! This file contains all experimental rules for Spyware filter.\r\n!\r\n!-------------------------------------------------------------------!\r\n!------- Experimental rules for Social filter ----------------------!\r\n!-------------------------------------------------------------------!\r\n!\r\n! This file contains all experimental rules for Social filter.\r\n!\r\n!-------------------------------------------------------------------!\r\n!------- Experimental rules for Russian filter ---------------------!\r\n!-------------------------------------------------------------------!\r\n!\r\n! Advertising networks known rotator domains\r\n!\r\n! This section contains the list of rules blocking requests\r\n! to known rotator domains of the advertising networks.\r\n! For example, \"*.doubleclick.net\" are rotator domains\r\n! of Doubleclick ad network.\r\n!\r\n! Do not mix it up with direct adverts domains.\r\n! Read about it in direct_adverts.txt\r\n!\r\n!\r\n!\r\n! Direct adverts\r\n!\r\n! Contains rules which are blocking URLs to direct adverts.\r\n! What do we mean by direct adverts - it is all kind of advertisers\r\n! who are not ad networks.\r\n!\r\n! For example, rules that block referral links.\r\n!\r\n!\r\n! URL blocking rules unsorted list\r\n! http://adguard.com/filterrules.html#baseRules\r\n!\r\n! Add basic rule here if it cannot be added to\r\n! direct_adverts.txt or advertising_networks.txt.\r\n! For example rules like \"http://example.com/banner.png\"\r\n! blocking specific URL should be added to this section.\r\n!\r\n!\r\n! Common CSS rules\r\n! http://adguard.com/filterrules.html#hideRules\r\n! http://adguard.com/filterrules.html#cssInjection\r\n!\r\n! This section contains CSS rules without domain restrictions.\r\n! Be cautious and add rules here even if you are sure that this\r\n! rule could be used for more than one web site.\r\n!\r\n!\r\n! Common HTML rules\r\n! http://adguard.com/filterrules.html#htmlContentFilter\r\n!\r\n! This section contains the list of common HTML rules\r\n! without domain restrictions.\r\n! Be aware that rules added to this section cannot be used\r\n! by Adguard extensions.\r\n! We advise you to stick to CSS/Javascript/URL rule types\r\n! and use HTML rules if there is no other way only.\r\n!\r\n!\r\n! Common javascript rules\r\n! http://adguard.com/filterrules.html#javascriptInjection\r\n!\r\n! Javascript rules which are not restricted to specific domains.\r\n! Be VERY cautious with this type of rules.\r\n!\r\n!\r\n! Rules which are restricted to one or more domains.\r\n! This section contain any type of rule grouped by domain.\r\n!\r\nmail.yandex.ru#?#.modal:has(> div[data-lego] div[class^=\"mail-SubscriptionsPopup\"])\r\n!\r\n! Allowlist\r\n!\r\n! This section contains all kinds of exception rules.\r\n!\r\n!-------------------------------------------------------------------!\r\n!------- Experimental rules for Other filters ----------------------!\r\n!-------------------------------------------------------------------!\r\n!\r\n! This file contains all filters other than English, Social, Spyware and Russian.\r\n! Also filters by platforms https://github.com/AdguardTeam/AdguardBrowserExtension/issues/917\r\n!\r\n! https://github.com/AdguardTeam/AdguardFilters/issues/169842\r\n/videojs8/nuevo.min.js\r\n/videojs/plugins/vastpro.js\r\n! https://github.com/AdguardTeam/AdguardFilters/issues/142875\r\nimdb.com#?#div[data-testid=\"promptable\"]:has(.ipc-rating-display-with-poster__image)\r\nimdb.com#$?#body:has(div[data-testid=\"promptable\"] .ipc-rating-display-with-poster__image) { overflow: auto !important; }\r\n!\r\n! Special rules for AdGuard websites' test pages. The only purpose of these\r\n! rules is to make test pages work so that users could verify that AdGuard\r\n! is properly working.\r\n!\r\n!+ NOT_OPTIMIZED\r\nadguard.info,adguard.com,adguard.app##.hello_from_adguard_experimental\r\n! Detect of using AdGuard products\r\n!+ NOT_PLATFORM(windows, mac, android, ios, ext_ublock) NOT_OPTIMIZED\r\nadguard.info,adguard.com,adguard.app##.hello_from_adguard_ext\r\n! Detect HTTPS filtering\r\n! Detect Advanced Protection of AdGuard for iOS\r\n!\r\n!-------------------------------------------------------------------!\r\n!------- Experimental rules for Mobile ads filter-------------------!\r\n!-------------------------------------------------------------------!\r\n!\r\n! Mobile advertising networks known rotator domains\r\n! Used to show ads in mobile apps and websites\r\n!\r\n!-------------------------------------------------------------------!\r\n!---------------------- Dangerous rules ----------------------------!\r\n!-------------------------------------------------------------------!\r\n!#######################################################\r\n!######### The list of dangerous rules #################\r\n!#######################################################\r\n!\r\n!################## For advertisement ##################\r\n!\r\n! https://github.com/AdguardTeam/AdguardFilters/issues/64754\r\n!\r\n!\r\n!################## For tracking ##################\r\n||uim.tifbs.net/js/2048.js"
		}
	},
	{
		"id": 8577,
		"action": {
			"type": "block"
		},
		"condition": {
			"urlFilter": "/videojs8/nuevo.min.js"
		},
		"priority": 1
	},
	{
		"id": 8610,
		"action": {
			"type": "block"
		},
		"condition": {
			"urlFilter": "/videojs/plugins/vastpro.js"
		},
		"priority": 1
	},
	{
		"id": 9117,
		"action": {
			"type": "block"
		},
		"condition": {
			"urlFilter": "||uim.tifbs.net/js/2048.js"
		},
		"priority": 1
	}
]